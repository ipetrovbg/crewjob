(function () {    var app = angular.module('crewjob');    var projectEditCtrl = function ($scope, $timeout, projectServices, $routeParams, $location, toastinoService, $cookies, FileUploader, categoriesServices) {        //console.log($routeParams.project_edit_id);        $scope.projectID = $routeParams.project_edit_id;        $scope.btnEdit = true;        projectServices.getProject($routeParams.project_edit_id)            .success(function (response) {                console.log(response);                if (response.status) {                    if ($cookies.get('ID') == response.project.user_id) {                        $scope.newAdressess = null;                        $scope.lat = null;                        $scope.lon = null;                        $('html').on('click', '.catToEdit', function () {                            if ($scope.categoriesToEdit.contains($(this).data('category-id'))) {                                var index = $scope.categoriesToEdit.indexOf($(this).data('category-id'));                                if (index > -1) {                                    $scope.categoriesToEdit.splice(index, 1);                                }                                $(this).removeClass('active');                            } else {                                $scope.categoriesToEdit.push($(this).data('category-id'));                                $(this).addClass('active');                            }                        });                        $scope.projectTitle = response.project.name;                        $scope.projectLocation = response.project.location;                        $scope.projectDescription = response.project.description;                        $scope.projectCategories = response.project.categories;                        $scope.projectID = response.project.id;                        $scope.visibility = response.project.status;                        $scope.projectFiles = response.project.files;                        $scope.categoriesToEdit = [];                        angular.forEach($scope.projectCategories, function (el, i) {                            $scope.categoriesToEdit.push(el.category_ID);                        });                        categoriesServices.getAll().success(function (response) {                            $scope.allCategories = response.categories;                            angular.forEach($scope.allCategories, function (value, key) {                                if ($scope.categoriesToEdit.contains(value.id)) {                                    $scope.allCategories[key].project = true;                                } else {                                    $scope.allCategories[key].project = false;                                }                            });                        });                        $scope.markersCoordsToEdit = {                            latitude: response.project.latitude,                            longitude: response.project.longitude                        }                        $scope.map = {                            center: {                                latitude: response.project.latitude,                                longitude: response.project.longitude                            }, zoom: 9                        };                        $scope.editProject = function () {                            angular.forEach($scope.projectFile.queue, function (item) {                                item.upload();                            });                            if(!$scope.lat){                                $scope.lat = response.project.latitude;                            }                            if(!$scope.lon){                                $scope.lon = response.project.longitude;                            }                            if(!$scope.newAdressess){                                $scope.newAdressess = $scope.projectLocation;                            }                            projectServices.editProject($scope.projectID,                                $scope.projectTitle, $scope.projectDescription,                                $scope.categoriesToEdit, $scope.newAdressess,                                $scope.lat, $scope.lon, $scope.visibility).success(function(response){                                if(response.status){                                    if ($scope.hasFile) {                                        $scope.projectFile.onCompleteAll = function () {                                            toastinoService.makeSuccessToast('Успешно редактирахте проекта!', 'long');                                            projectServices.getProject($routeParams.project_edit_id)                                                .success(function(response){                                                    $scope.projectFiles = response.project.files;                                                }).error(function(){                                                toastinoService.makeDangerToast('Нещо се обърка, моля опитайте отново!', 'long');                                            });                                        }                                    }else{                                        toastinoService.makeSuccessToast('Успешно редактирахте проекта!', 'long');                                        projectServices.getProject($routeParams.project_edit_id)                                            .success(function(response){                                                $scope.projectFiles = response.project.files;                                            }).error(function(){                                            toastinoService.makeDangerToast('Нещо се обърка, моля опитайте отново!', 'long');                                        });                                    }                                }else{                                    toastinoService.makeWarningToast('Нещо се обърка, моля опитайте отново!', 'long');                                }                            }).error(function(reason){                                toastinoService.makeDangerToast('Нещо се обърка, моля опитайте отново!', 'long');                            });                        };                        $scope.deleteProjectFile = function(file_id){                           projectServices.deleteprojectFile(file_id)                               .success(function(response){                                   if(response.auth){                                       if(response.status){                                           toastinoService.makeSuccessToast('Успешно изтрихте файла!', 'long');                                           projectServices.getProject($routeParams.project_edit_id)                                               .success(function(response){                                                   $scope.projectFiles = response.project.files;                                               }).error(function(){                                               toastinoService.makeDangerToast('Нещо се обърка, моля опитайте отново!', 'long');                                           });                                       }else{                                           toastinoService.makeDangerToast('Нещо се обърка, моля опитайте отново!', 'long');                                       }                                   }else{                                       toastinoService.makeDangerToast('Нямате право да изтривате файла!', 'long');                                   }                               }).error(function(reason){                               toastinoService.makeDangerToast('Нещо се обърка, моля опитайте отново!', 'long');                           });                        };                        /* on stop typing */                        var inputChangedPromise;                        $scope.inputChanged = function () {                            //$scope.loadingLocation = true;                            if (inputChangedPromise) {                                $timeout.cancel(inputChangedPromise);                            }                            inputChangedPromise = $timeout(taskToDo, 1000);                        };                        function taskToDo() {                            //console.log($scope.locations);                            geocoder = new google.maps.Geocoder();                            geocoder.geocode({                                'address': $scope.projectLocation                            }, function (results, status) {                                if (status == google.maps.GeocoderStatus.OK) {                                    $scope.newAdressess = results[0].formatted_address;                                    $scope.lat = results[0].geometry.location.lat();                                    $scope.lon = results[0].geometry.location.lng();                                    $scope.map = {                                        center: {                                            latitude: results[0].geometry.location.lat(),                                            longitude: results[0].geometry.location.lng()                                        }, zoom: 9                                    };                                    $scope.markersCoordsToEdit = {                                        latitude: $scope.lat,                                        longitude: $scope.lon                                    };                                }                                console.log(results);                            });                        }                        /* /on stop typing */                    } else {                        $location.path('projects/' + $routeParams.project_edit_id);                    }                } else {                    toastinoService.makeDangerToast("Грешка при зареждане на проекта!", 'long');                }            }).error(function (reason) {        });        /* upload project file */        $scope.projectFile = new FileUploader({            url: '/upload-project-file',            headers: {                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content'),                'projectID': $routeParams.project_edit_id            },            // autoUpload:true,            alias: "pfile",            removeAfterUpload: true        });        $scope.projectFile.onProgressItem = function (item, progress) {            $scope.progres = progress;            $('.progress-bar').css({'width': progress + '%'});            $('.sr-only').text(progress + '%');        };        $scope.projectFile.onAfterAddingFile = function (item) {            $scope.hasFile = true;        };        $scope.projectFile.onBeforeUploadItem = function () {            console.log('start');        };        /* /upload project file */    };    app.controller('projectEditCtrl', projectEditCtrl);}());Array.prototype.contains = function (obj) {    var i = this.length;    while (i--) {        if (this[i] === obj) {            return true;        }    }    return false;}